graph TB
    subgraph "DECIPHER Layer Integration Architecture"
        direction TB
        
        subgraph L2_INTERFACE["🔌 Layer 2 Integration (Model Compute)"]
            L2_MODELS["AI Model Instances"]
            L2_STREAM["Token Stream API"]
            L2_CALLBACK["Callback Registration"]
            L2_METADATA["Model Metadata"]
            L2_CONTROL["Generation Control"]
        end
        
        subgraph DECIPHER_CORE["🧠 DECIPHER Core (Layer 3)"]
            INGESTION["Token Ingestion Queue"]
            FRAME_LOOP["60Hz Frame Loop"]
            ENERGY_ENGINE["Energy Calculation Engine"]
            STATE_MANAGER["State Management"]
            PATTERN_DETECTOR["Pattern Detection"]
            EVENT_BUILDER["Event Builder"]
        end
        
        subgraph L4_INTERFACE["🌐 Layer 4 Integration (Transport)"]
            L4_WEBSOCKET["WebSocket Channel"]
            L4_PROTOCOL["Event Protocol"]
            L4_SERIALIZER["JSON Serializer"]
            L4_VALIDATOR["Schema Validator"]
            L4_BROADCAST["Event Broadcaster"]
        end
        
        subgraph STORAGE_INTEGRATION["💾 Storage Integration (WF-TECH-006)"]
            ENERGY_PERSIST["Energy Persistence"]
            AUDIT_LOGGER["Audit Trail Logger"]
            METRICS_STORE["Performance Metrics"]
            SESSION_STATE["Session State Storage"]
        end
        
        subgraph MICROSERVICE_ARCH["🏗️ Microservice Architecture (WF-TECH-004)"]
            DECIPHER_SERVICE["DECIPHER Service"]
            MODEL_SERVICE["Model Service"]
            TRANSPORT_SERVICE["Transport Service"]
            STORAGE_SERVICE["Storage Service"]
            SERVICE_MESH["Service Mesh"]
        end
    end
    
    %% Layer 2 to DECIPHER Flow
    L2_MODELS -->|"Token Events"| L2_STREAM
    L2_STREAM -->|"Stream Registration"| L2_CALLBACK
    L2_CALLBACK -->|"Token + Metadata"| INGESTION
    L2_METADATA -->|"Model Info"| ENERGY_ENGINE
    
    %% DECIPHER Internal Flow
    INGESTION -->|"Queued Tokens"| FRAME_LOOP
    FRAME_LOOP -->|"Process Batch"| ENERGY_ENGINE
    ENERGY_ENGINE -->|"EU Values"| STATE_MANAGER
    STATE_MANAGER -->|"State Data"| PATTERN_DETECTOR
    PATTERN_DETECTOR -->|"Patterns + Energy"| EVENT_BUILDER
    
    %% DECIPHER to Layer 4 Flow
    EVENT_BUILDER -->|"Structured Events"| L4_PROTOCOL
    L4_PROTOCOL -->|"Event Objects"| L4_SERIALIZER
    L4_SERIALIZER -->|"JSON Events"| L4_VALIDATOR
    L4_VALIDATOR -->|"Valid Events"| L4_WEBSOCKET
    L4_WEBSOCKET -->|"Real-time Stream"| L4_BROADCAST
    
    %% Control Flow (Backpressure)
    L4_BROADCAST -.->|"Backpressure Signal"| FRAME_LOOP
    FRAME_LOOP -.->|"Slow Down Signal"| L2_CONTROL
    L2_CONTROL -.->|"Rate Limiting"| L2_STREAM
    
    %% Storage Integration
    STATE_MANAGER -->|"Periodic Saves"| ENERGY_PERSIST
    EVENT_BUILDER -->|"Audit Events"| AUDIT_LOGGER
    FRAME_LOOP -->|"Performance Data"| METRICS_STORE
    STATE_MANAGER -->|"Session Data"| SESSION_STATE
    
    %% Microservice Architecture
    DECIPHER_CORE --> DECIPHER_SERVICE
    L2_INTERFACE --> MODEL_SERVICE
    L4_INTERFACE --> TRANSPORT_SERVICE
    STORAGE_INTEGRATION --> STORAGE_SERVICE
    
    DECIPHER_SERVICE <--> SERVICE_MESH
    MODEL_SERVICE <--> SERVICE_MESH
    TRANSPORT_SERVICE <--> SERVICE_MESH
    STORAGE_SERVICE <--> SERVICE_MESH
    
    %% Multi-Model Scenarios
    subgraph MULTI_MODEL["🤖 Multi-Model Integration"]
        MODEL_A["Model A (llama2-7b)"]
        MODEL_B["Model B (codellama-13b)"]
        MODEL_C["Model C (mistral-7b)"]
        COUNCIL_COORDINATOR["Council Coordinator"]
        STREAM_MERGER["Stream Merger"]
    end
    
    MODEL_A --> COUNCIL_COORDINATOR
    MODEL_B --> COUNCIL_COORDINATOR
    MODEL_C --> COUNCIL_COORDINATOR
    COUNCIL_COORDINATOR --> STREAM_MERGER
    STREAM_MERGER --> L2_STREAM
    
    %% Event Types and Schemas
    subgraph EVENT_SCHEMAS["📋 Event Schema Integration"]
        TOKEN_EVENT["token_stream Event"]
        ENERGY_EVENT["energy_update Event"]
        INTERFERENCE_EVENT["interference Event"]
        RESONANCE_EVENT["resonance Event"]
        ERROR_EVENT["error Event"]
    end
    
    EVENT_BUILDER --> TOKEN_EVENT
    EVENT_BUILDER --> ENERGY_EVENT
    EVENT_BUILDER --> INTERFERENCE_EVENT
    EVENT_BUILDER --> RESONANCE_EVENT
    EVENT_BUILDER --> ERROR_EVENT
    
    %% API Contracts
    subgraph API_CONTRACTS["📄 API Contracts"]
        L2_CONTRACT["Layer 2 Token API"]
        L3_CONTRACT["Layer 3 DECIPHER API"]
        L4_CONTRACT["Layer 4 Event API"]
        STORAGE_CONTRACT["Storage API"]
    end
    
    L2_CALLBACK --> L2_CONTRACT
    FRAME_LOOP --> L3_CONTRACT
    L4_PROTOCOL --> L4_CONTRACT
    ENERGY_PERSIST --> STORAGE_CONTRACT
    
    %% Performance Monitoring
    subgraph MONITORING["📊 Performance Monitoring"]
        LATENCY_MONITOR["End-to-End Latency"]
        THROUGHPUT_MONITOR["Token Throughput"]
        ERROR_MONITOR["Error Rate Monitor"]
        RESOURCE_MONITOR["Resource Usage"]
    end
    
    L2_STREAM --> LATENCY_MONITOR
    INGESTION --> THROUGHPUT_MONITOR
    EVENT_BUILDER --> ERROR_MONITOR
    FRAME_LOOP --> RESOURCE_MONITOR
    
    %% Hardware Tier Adaptations
    subgraph HW_TIERS["🖥️ Hardware Tier Integration"]
        LOW_TIER["Low Tier Adaptation"]
        MID_TIER["Mid Tier Standard"]
        HIGH_TIER["High Tier Enhanced"]
        HYBRID_TIER["Hybrid Cloud"]
    end
    
    FRAME_LOOP --> LOW_TIER
    FRAME_LOOP --> MID_TIER
    FRAME_LOOP --> HIGH_TIER
    FRAME_LOOP --> HYBRID_TIER
    
    %% Privacy and Security
    subgraph PRIVACY["🔒 Privacy & Security"]
        DATA_SCRUBBER["Data Scrubbing"]
        ENCRYPTION["Transport Encryption"]
        ACCESS_CONTROL["Access Control"]
        AUDIT_TRAIL["Audit Trail"]
    end
    
    EVENT_BUILDER --> DATA_SCRUBBER
    L4_WEBSOCKET --> ENCRYPTION
    L4_BROADCAST --> ACCESS_CONTROL
    AUDIT_LOGGER --> AUDIT_TRAIL
    
    %% Integration with Other WF Documents
    subgraph WF_INTEGRATION["🔗 WIRTHFORGE Integration"]
        WF_FND_001["WF-FND-001 (Local-First)"]
        WF_FND_002["WF-FND-002 (Energy Metaphor)"]
        WF_FND_003["WF-FND-003 (Layer Architecture)"]
        WF_TECH_003["WF-TECH-003 (WebSocket Protocol)"]
        WF_UX_003["WF-UX-003 (Level 3+ Experience)"]
    end
    
    DECIPHER_CORE --> WF_FND_001
    ENERGY_ENGINE --> WF_FND_002
    FRAME_LOOP --> WF_FND_003
    L4_PROTOCOL --> WF_TECH_003
    PATTERN_DETECTOR --> WF_UX_003
    
    %% Local-First Architecture
    subgraph LOCAL_FIRST["🏠 Local-First Implementation"]
        LOCAL_MODELS["Local Model Execution"]
        LOCAL_DECIPHER["Local DECIPHER Instance"]
        LOCAL_STORAGE["Local Data Storage"]
        OPTIONAL_REMOTE["Optional Remote Extensions"]
    end
    
    L2_MODELS --> LOCAL_MODELS
    DECIPHER_CORE --> LOCAL_DECIPHER
    STORAGE_INTEGRATION --> LOCAL_STORAGE
    SERVICE_MESH -.->|"Optional"| OPTIONAL_REMOTE
    
    %% Error Handling and Recovery
    subgraph ERROR_HANDLING["🚨 Error Handling"]
        L2_ERRORS["Model Errors"]
        L3_ERRORS["DECIPHER Errors"]
        L4_ERRORS["Transport Errors"]
        RECOVERY["Recovery Mechanisms"]
    end
    
    L2_STREAM -.->|"Errors"| L2_ERRORS
    FRAME_LOOP -.->|"Errors"| L3_ERRORS
    L4_WEBSOCKET -.->|"Errors"| L4_ERRORS
    L2_ERRORS --> RECOVERY
    L3_ERRORS --> RECOVERY
    L4_ERRORS --> RECOVERY
    
    %% Color Coding
    classDef layer2 fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef layer3 fill:#e8f5e8,stroke:#388e3c,stroke-width:3px
    classDef layer4 fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef storage fill:#e1f5fe,stroke:#0277bd,stroke-width:2px
    classDef microservice fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef monitoring fill:#ffebee,stroke:#d32f2f,stroke-width:1px
    classDef integration fill:#f1f8e9,stroke:#689f38,stroke-width:1px
    
    class L2_INTERFACE,L2_MODELS,L2_STREAM,L2_CALLBACK,MODEL_A,MODEL_B,MODEL_C layer2
    class DECIPHER_CORE,INGESTION,FRAME_LOOP,ENERGY_ENGINE,STATE_MANAGER,PATTERN_DETECTOR,EVENT_BUILDER layer3
    class L4_INTERFACE,L4_WEBSOCKET,L4_PROTOCOL,L4_SERIALIZER,L4_VALIDATOR,L4_BROADCAST layer4
    class STORAGE_INTEGRATION,ENERGY_PERSIST,AUDIT_LOGGER,METRICS_STORE,SESSION_STATE storage
    class MICROSERVICE_ARCH,DECIPHER_SERVICE,MODEL_SERVICE,TRANSPORT_SERVICE,SERVICE_MESH microservice
    class MONITORING,LATENCY_MONITOR,THROUGHPUT_MONITOR,ERROR_MONITOR,RESOURCE_MONITOR monitoring
    class WF_INTEGRATION,LOCAL_FIRST,ERROR_HANDLING integration
