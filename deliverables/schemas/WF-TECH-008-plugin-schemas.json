{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "WF-TECH-008 Plugin System Schemas",
  "description": "Comprehensive API contracts, data formats, and configuration schemas for WIRTHFORGE Plugin System",
  "definitions": {
    "PluginManifest": {
      "type": "object",
      "title": "Plugin Manifest Schema",
      "description": "Defines the structure of plugin.json manifest file",
      "required": ["name", "version", "description", "author", "main", "capabilities"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9-]+$",
          "minLength": 3,
          "maxLength": 50,
          "description": "Plugin identifier (kebab-case)"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?$",
          "description": "Semantic version (e.g., 1.0.0, 1.0.0-beta.1)"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 200,
          "description": "Brief description of plugin functionality"
        },
        "author": {
          "type": "object",
          "required": ["name", "email"],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 100
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "url": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        "main": {
          "type": "string",
          "description": "Entry point file (e.g., index.py, main.ts)"
        },
        "runtime": {
          "type": "string",
          "enum": ["python", "typescript", "wasm"],
          "description": "Plugin runtime environment"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityRequest"
          },
          "description": "List of WIRTHFORGE capabilities required by plugin"
        },
        "dependencies": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9-_]+$": {
              "type": "string",
              "description": "Dependency version constraint"
            }
          }
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "energy.read",
              "energy.write",
              "decipher.observe",
              "decipher.interact",
              "websocket.send",
              "websocket.receive",
              "storage.read",
              "storage.write",
              "network.http",
              "system.metrics"
            ]
          },
          "description": "Required system permissions"
        },
        "resources": {
          "$ref": "#/definitions/ResourceLimits"
        },
        "wirthforge": {
          "type": "object",
          "properties": {
            "minVersion": {
              "type": "string",
              "description": "Minimum WIRTHFORGE version required"
            },
            "maxVersion": {
              "type": "string",
              "description": "Maximum WIRTHFORGE version supported"
            }
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 10
        },
        "license": {
          "type": "string",
          "description": "SPDX license identifier"
        },
        "repository": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["git", "svn", "hg"]
            },
            "url": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      }
    },
    "CapabilityRequest": {
      "type": "object",
      "title": "Capability Request Schema",
      "required": ["name", "version"],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "energy-observer",
            "energy-manipulator",
            "decipher-observer",
            "decipher-participant",
            "websocket-client",
            "storage-manager",
            "metrics-collector",
            "ui-component"
          ]
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$",
          "description": "Capability API version (e.g., 1.0)"
        },
        "config": {
          "type": "object",
          "description": "Capability-specific configuration"
        }
      }
    },
    "ResourceLimits": {
      "type": "object",
      "title": "Resource Limits Schema",
      "properties": {
        "cpu": {
          "type": "object",
          "properties": {
            "maxUsagePercent": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            },
            "maxBurstDurationMs": {
              "type": "number",
              "minimum": 100,
              "default": 5000
            }
          }
        },
        "memory": {
          "type": "object",
          "properties": {
            "maxUsageMB": {
              "type": "number",
              "minimum": 10,
              "maximum": 1024,
              "default": 128
            },
            "maxHeapMB": {
              "type": "number",
              "minimum": 5,
              "default": 64
            }
          }
        },
        "network": {
          "type": "object",
          "properties": {
            "maxBandwidthKBps": {
              "type": "number",
              "minimum": 10,
              "default": 1024
            },
            "maxConnectionsPerSecond": {
              "type": "number",
              "minimum": 1,
              "default": 10
            }
          }
        },
        "storage": {
          "type": "object",
          "properties": {
            "maxDiskUsageMB": {
              "type": "number",
              "minimum": 1,
              "default": 100
            },
            "maxFileOperationsPerSecond": {
              "type": "number",
              "minimum": 1,
              "default": 50
            }
          }
        },
        "energy": {
          "type": "object",
          "properties": {
            "maxEnergyBudget": {
              "type": "number",
              "minimum": 0.1,
              "maximum": 10.0,
              "default": 1.0,
              "description": "Maximum energy units per second"
            }
          }
        }
      }
    },
    "PluginConfiguration": {
      "type": "object",
      "title": "Plugin Configuration Schema",
      "description": "Runtime configuration for plugin instances",
      "required": ["pluginId", "enabled"],
      "properties": {
        "pluginId": {
          "type": "string",
          "description": "Unique plugin identifier"
        },
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "autoStart": {
          "type": "boolean",
          "default": false,
          "description": "Start plugin automatically on system boot"
        },
        "priority": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "default": 5,
          "description": "Plugin execution priority (1=lowest, 10=highest)"
        },
        "resourceLimits": {
          "$ref": "#/definitions/ResourceLimits"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Granted permissions (subset of requested)"
        },
        "environment": {
          "type": "object",
          "patternProperties": {
            "^[A-Z_][A-Z0-9_]*$": {
              "type": "string"
            }
          },
          "description": "Environment variables for plugin"
        },
        "config": {
          "type": "object",
          "description": "Plugin-specific configuration parameters"
        }
      }
    },
    "PluginAPIRequest": {
      "type": "object",
      "title": "Plugin API Request Schema",
      "required": ["method", "capability", "requestId"],
      "properties": {
        "method": {
          "type": "string",
          "description": "API method name"
        },
        "capability": {
          "type": "string",
          "description": "Required capability for this request"
        },
        "requestId": {
          "type": "string",
          "format": "uuid",
          "description": "Unique request identifier"
        },
        "parameters": {
          "type": "object",
          "description": "Method-specific parameters"
        },
        "timeout": {
          "type": "number",
          "minimum": 100,
          "maximum": 30000,
          "default": 5000,
          "description": "Request timeout in milliseconds"
        }
      }
    },
    "PluginAPIResponse": {
      "type": "object",
      "title": "Plugin API Response Schema",
      "required": ["requestId", "success"],
      "properties": {
        "requestId": {
          "type": "string",
          "format": "uuid"
        },
        "success": {
          "type": "boolean"
        },
        "result": {
          "description": "Response data (if successful)"
        },
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "PERMISSION_DENIED",
                "CAPABILITY_NOT_FOUND",
                "INVALID_PARAMETERS",
                "RESOURCE_EXHAUSTED",
                "TIMEOUT",
                "INTERNAL_ERROR"
              ]
            },
            "message": {
              "type": "string"
            },
            "details": {
              "type": "object"
            }
          },
          "required": ["code", "message"]
        },
        "executionTime": {
          "type": "number",
          "description": "Execution time in milliseconds"
        }
      }
    },
    "PluginEvent": {
      "type": "object",
      "title": "Plugin Event Schema",
      "required": ["type", "pluginId", "timestamp"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "plugin.installed",
            "plugin.uninstalled",
            "plugin.activated",
            "plugin.deactivated",
            "plugin.error",
            "plugin.resource_limit_exceeded",
            "plugin.permission_denied",
            "plugin.api_call",
            "plugin.custom"
          ]
        },
        "pluginId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "severity": {
          "type": "string",
          "enum": ["info", "warning", "error", "critical"],
          "default": "info"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "description": "Event-specific data"
        },
        "correlationId": {
          "type": "string",
          "description": "For tracking related events"
        }
      }
    },
    "PluginMetrics": {
      "type": "object",
      "title": "Plugin Metrics Schema",
      "required": ["pluginId", "timestamp", "metrics"],
      "properties": {
        "pluginId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "metrics": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "object",
              "properties": {
                "usagePercent": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "userTimeMs": {
                  "type": "number"
                },
                "systemTimeMs": {
                  "type": "number"
                }
              }
            },
            "memory": {
              "type": "object",
              "properties": {
                "usageMB": {
                  "type": "number"
                },
                "heapUsedMB": {
                  "type": "number"
                },
                "heapTotalMB": {
                  "type": "number"
                }
              }
            },
            "network": {
              "type": "object",
              "properties": {
                "bytesReceived": {
                  "type": "number"
                },
                "bytesSent": {
                  "type": "number"
                },
                "connectionsActive": {
                  "type": "number"
                }
              }
            },
            "energy": {
              "type": "object",
              "properties": {
                "energyConsumed": {
                  "type": "number",
                  "description": "Energy units consumed"
                },
                "energyEfficiency": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "Energy efficiency ratio"
                }
              }
            },
            "api": {
              "type": "object",
              "properties": {
                "callsTotal": {
                  "type": "number"
                },
                "callsSuccessful": {
                  "type": "number"
                },
                "callsFailed": {
                  "type": "number"
                },
                "averageLatencyMs": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "PluginRegistryEntry": {
      "type": "object",
      "title": "Plugin Registry Entry Schema",
      "required": ["id", "manifest", "status", "installedAt"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique plugin instance ID"
        },
        "manifest": {
          "$ref": "#/definitions/PluginManifest"
        },
        "status": {
          "type": "string",
          "enum": ["installed", "active", "inactive", "error", "updating"],
          "description": "Current plugin status"
        },
        "installedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastActivatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "installPath": {
          "type": "string",
          "description": "File system path to plugin files"
        },
        "configuration": {
          "$ref": "#/definitions/PluginConfiguration"
        },
        "health": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": ["healthy", "degraded", "unhealthy", "unknown"]
            },
            "lastHealthCheck": {
              "type": "string",
              "format": "date-time"
            },
            "errorCount": {
              "type": "number",
              "minimum": 0
            },
            "uptime": {
              "type": "number",
              "description": "Uptime in seconds"
            }
          }
        }
      }
    },
    "MarketplacePackage": {
      "type": "object",
      "title": "Marketplace Package Schema",
      "required": ["packageId", "manifest", "downloadUrl", "signature"],
      "properties": {
        "packageId": {
          "type": "string",
          "description": "Unique marketplace package identifier"
        },
        "manifest": {
          "$ref": "#/definitions/PluginManifest"
        },
        "downloadUrl": {
          "type": "string",
          "format": "uri",
          "description": "Package download URL"
        },
        "signature": {
          "type": "object",
          "required": ["algorithm", "value", "keyId"],
          "properties": {
            "algorithm": {
              "type": "string",
              "enum": ["RSA-SHA256", "ECDSA-SHA256"]
            },
            "value": {
              "type": "string",
              "description": "Base64-encoded signature"
            },
            "keyId": {
              "type": "string",
              "description": "Signing key identifier"
            }
          }
        },
        "publishedAt": {
          "type": "string",
          "format": "date-time"
        },
        "downloads": {
          "type": "number",
          "minimum": 0
        },
        "rating": {
          "type": "object",
          "properties": {
            "average": {
              "type": "number",
              "minimum": 1,
              "maximum": 5
            },
            "count": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "energy-management",
              "visualization",
              "data-processing",
              "ui-enhancement",
              "integration",
              "development-tools",
              "security",
              "performance"
            ]
          }
        },
        "compatibility": {
          "type": "object",
          "properties": {
            "wirthforgeVersions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "platforms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["linux", "windows", "macos"]
              }
            }
          }
        }
      }
    },
    "SecurityPolicy": {
      "type": "object",
      "title": "Security Policy Schema",
      "required": ["version", "rules"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "type", "action"],
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["permission", "resource", "api", "network", "file"]
              },
              "action": {
                "type": "string",
                "enum": ["allow", "deny", "limit", "audit"]
              },
              "conditions": {
                "type": "object",
                "properties": {
                  "pluginIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "capabilities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "timeWindow": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "time"
                      },
                      "end": {
                        "type": "string",
                        "format": "time"
                      }
                    }
                  }
                }
              },
              "limits": {
                "type": "object",
                "properties": {
                  "maxValue": {
                    "type": "number"
                  },
                  "timeWindowMs": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "defaultPolicy": {
          "type": "string",
          "enum": ["allow", "deny"],
          "default": "deny"
        }
      }
    }
  },
  "anyOf": [
    {
      "$ref": "#/definitions/PluginManifest"
    },
    {
      "$ref": "#/definitions/PluginConfiguration"
    },
    {
      "$ref": "#/definitions/PluginAPIRequest"
    },
    {
      "$ref": "#/definitions/PluginAPIResponse"
    },
    {
      "$ref": "#/definitions/PluginEvent"
    },
    {
      "$ref": "#/definitions/PluginMetrics"
    },
    {
      "$ref": "#/definitions/PluginRegistryEntry"
    },
    {
      "$ref": "#/definitions/MarketplacePackage"
    },
    {
      "$ref": "#/definitions/SecurityPolicy"
    }
  ]
}
