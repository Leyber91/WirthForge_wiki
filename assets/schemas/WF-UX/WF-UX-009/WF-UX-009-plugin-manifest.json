{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://wirthforge.org/schemas/WF-UX-009-plugin-manifest.json",
  "title": "WIRTHFORGE Plugin Manifest Schema",
  "description": "Schema for defining custom plugin metadata, permissions, and integration points",
  "type": "object",
  "required": ["id", "name", "version", "author", "entryPoint", "permissions"],
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9_-]*$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Unique plugin identifier (lowercase, alphanumeric, hyphens, underscores)"
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "description": "Human-readable plugin name"
    },
    "displayName": {
      "type": "string",
      "maxLength": 100,
      "description": "Display name for UI (defaults to name if not provided)"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 500,
      "description": "Detailed plugin description"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9.-]+)?$",
      "description": "Semantic version (e.g., 1.0.0, 1.0.0-beta.1)"
    },
    "author": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "description": "Author name"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Author email"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Author website or profile URL"
        }
      }
    },
    "license": {
      "type": "string",
      "maxLength": 50,
      "description": "License identifier (e.g., MIT, Apache-2.0)"
    },
    "homepage": {
      "type": "string",
      "format": "uri",
      "description": "Plugin homepage URL"
    },
    "repository": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["git", "svn", "hg"],
          "description": "Repository type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Repository URL"
        }
      }
    },
    "keywords": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9_-]+$",
        "maxLength": 30
      },
      "maxItems": 10,
      "uniqueItems": true,
      "description": "Plugin keywords for discovery"
    },
    "category": {
      "type": "string",
      "enum": [
        "visualization",
        "data-processing",
        "ai-enhancement",
        "integration",
        "utility",
        "workflow",
        "monitoring",
        "security",
        "development",
        "custom"
      ],
      "description": "Plugin category"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Plugin creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        },
        "requiredLevel": {
          "type": "integer",
          "minimum": 1,
          "maximum": 5,
          "default": 4,
          "description": "Minimum user level required (4+ for plugins)"
        },
        "stability": {
          "type": "string",
          "enum": ["experimental", "beta", "stable", "deprecated"],
          "default": "stable",
          "description": "Plugin stability level"
        },
        "priority": {
          "type": "string",
          "enum": ["low", "normal", "high"],
          "default": "normal",
          "description": "Plugin loading priority"
        }
      }
    },
    "compatibility": {
      "type": "object",
      "properties": {
        "wirthforgeVersion": {
          "type": "string",
          "description": "Compatible WIRTHFORGE version range (semver)"
        },
        "platform": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["windows", "macos", "linux", "web"]
          },
          "description": "Supported platforms"
        },
        "architecture": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["x64", "arm64", "universal"]
          },
          "description": "Supported architectures"
        },
        "nodeVersion": {
          "type": "string",
          "description": "Required Node.js version (if applicable)"
        },
        "pythonVersion": {
          "type": "string",
          "description": "Required Python version (if applicable)"
        }
      }
    },
    "entryPoint": {
      "type": "object",
      "required": ["main"],
      "properties": {
        "main": {
          "type": "string",
          "description": "Main plugin file path"
        },
        "type": {
          "type": "string",
          "enum": ["javascript", "python", "native", "wasm"],
          "default": "javascript",
          "description": "Plugin runtime type"
        },
        "exports": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "type"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Export function/class name"
              },
              "type": {
                "type": "string",
                "enum": ["function", "class", "constant", "component"],
                "description": "Export type"
              },
              "description": {
                "type": "string",
                "maxLength": 200,
                "description": "Export description"
              },
              "parameters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "type"],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Parameter name"
                    },
                    "type": {
                      "type": "string",
                      "description": "Parameter type"
                    },
                    "required": {
                      "type": "boolean",
                      "default": true
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 100
                    }
                  }
                }
              },
              "returnType": {
                "type": "string",
                "description": "Return type for functions"
              }
            }
          },
          "description": "Plugin exports"
        }
      }
    },
    "permissions": {
      "type": "object",
      "properties": {
        "required": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "energy.read",
              "energy.write",
              "workflow.read",
              "workflow.write",
              "workflow.execute",
              "file.read",
              "file.write",
              "network.local",
              "network.external",
              "ui.create",
              "ui.modify",
              "events.listen",
              "events.emit",
              "storage.read",
              "storage.write",
              "system.info",
              "plugin.manage"
            ]
          },
          "uniqueItems": true,
          "description": "Required permissions for plugin operation"
        },
        "optional": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "energy.read",
              "energy.write",
              "workflow.read",
              "workflow.write",
              "workflow.execute",
              "file.read",
              "file.write",
              "network.local",
              "network.external",
              "ui.create",
              "ui.modify",
              "events.listen",
              "events.emit",
              "storage.read",
              "storage.write",
              "system.info",
              "plugin.manage"
            ]
          },
          "uniqueItems": true,
          "description": "Optional permissions that enhance functionality"
        },
        "justification": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "maxLength": 200
          },
          "description": "Justification for each permission request"
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "memory": {
          "type": "object",
          "properties": {
            "initial": {
              "type": "string",
              "pattern": "^\\d+[KMG]B$",
              "default": "10MB",
              "description": "Initial memory allocation"
            },
            "maximum": {
              "type": "string",
              "pattern": "^\\d+[KMG]B$",
              "default": "100MB",
              "description": "Maximum memory limit"
            }
          }
        },
        "cpu": {
          "type": "object",
          "properties": {
            "maxUsage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "default": 25,
              "description": "Maximum CPU usage percentage"
            },
            "timeSlice": {
              "type": "string",
              "pattern": "^\\d+ms$",
              "default": "16ms",
              "description": "Maximum execution time per frame"
            }
          }
        },
        "storage": {
          "type": "object",
          "properties": {
            "maxSize": {
              "type": "string",
              "pattern": "^\\d+[KMG]B$",
              "default": "50MB",
              "description": "Maximum storage space"
            },
            "persistent": {
              "type": "boolean",
              "default": false,
              "description": "Allow persistent storage"
            }
          }
        },
        "network": {
          "type": "object",
          "properties": {
            "maxConnections": {
              "type": "integer",
              "minimum": 0,
              "maximum": 10,
              "default": 2,
              "description": "Maximum concurrent connections"
            },
            "allowedHosts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Allowed network hosts (localhost only by default)"
            },
            "timeout": {
              "type": "string",
              "pattern": "^PT\\d+[HMS]$",
              "default": "PT30S",
              "description": "Network request timeout"
            }
          }
        }
      }
    },
    "dependencies": {
      "type": "object",
      "properties": {
        "plugins": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id", "version"],
            "properties": {
              "id": {
                "type": "string",
                "description": "Dependency plugin ID"
              },
              "version": {
                "type": "string",
                "description": "Required version range"
              },
              "optional": {
                "type": "boolean",
                "default": false,
                "description": "Whether dependency is optional"
              }
            }
          },
          "description": "Plugin dependencies"
        },
        "libraries": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "External library dependencies with versions"
        },
        "system": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string",
                "description": "System dependency name"
              },
              "version": {
                "type": "string",
                "description": "Required version"
              },
              "optional": {
                "type": "boolean",
                "default": false
              }
            }
          },
          "description": "System dependencies"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "description": "JSON schema for plugin configuration"
        },
        "defaults": {
          "type": "object",
          "description": "Default configuration values"
        },
        "ui": {
          "type": "object",
          "properties": {
            "configurable": {
              "type": "boolean",
              "default": true,
              "description": "Whether plugin is user-configurable"
            },
            "settingsPanel": {
              "type": "string",
              "description": "Custom settings panel component"
            }
          }
        }
      }
    },
    "hooks": {
      "type": "object",
      "properties": {
        "lifecycle": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "onLoad",
              "onUnload",
              "onEnable",
              "onDisable",
              "onConfigChange",
              "onSystemStart",
              "onSystemStop"
            ]
          },
          "description": "Lifecycle hooks the plugin implements"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["event", "handler"],
            "properties": {
              "event": {
                "type": "string",
                "description": "Event type to listen for"
              },
              "handler": {
                "type": "string",
                "description": "Handler function name"
              },
              "priority": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10,
                "default": 5,
                "description": "Event handler priority"
              }
            }
          },
          "description": "Event hooks"
        },
        "ui": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["location", "component"],
            "properties": {
              "location": {
                "type": "string",
                "enum": [
                  "dashboard.widget",
                  "toolbar.button",
                  "menu.item",
                  "sidebar.panel",
                  "modal.dialog",
                  "context.menu"
                ],
                "description": "UI integration point"
              },
              "component": {
                "type": "string",
                "description": "Component name to render"
              },
              "title": {
                "type": "string",
                "maxLength": 50,
                "description": "UI element title"
              },
              "icon": {
                "type": "string",
                "description": "Icon identifier"
              },
              "order": {
                "type": "integer",
                "description": "Display order"
              }
            }
          },
          "description": "UI integration hooks"
        }
      }
    },
    "files": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["path", "type"],
        "properties": {
          "path": {
            "type": "string",
            "description": "File path relative to plugin root"
          },
          "type": {
            "type": "string",
            "enum": ["source", "asset", "config", "documentation", "test"],
            "description": "File type"
          },
          "description": {
            "type": "string",
            "maxLength": 100,
            "description": "File description"
          },
          "size": {
            "type": "integer",
            "minimum": 0,
            "description": "File size in bytes"
          },
          "checksum": {
            "type": "string",
            "description": "File checksum for integrity verification"
          }
        }
      },
      "description": "Plugin file manifest"
    },
    "security": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "description": "Digital signature for plugin verification"
        },
        "checksum": {
          "type": "string",
          "description": "Plugin package checksum"
        },
        "sandboxed": {
          "type": "boolean",
          "default": true,
          "description": "Whether plugin runs in sandbox"
        },
        "trustedSources": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "Trusted source URLs for updates"
        }
      }
    },
    "testing": {
      "type": "object",
      "properties": {
        "testCommand": {
          "type": "string",
          "description": "Command to run tests"
        },
        "coverage": {
          "type": "object",
          "properties": {
            "minimum": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "description": "Minimum test coverage percentage"
            },
            "reportPath": {
              "type": "string",
              "description": "Coverage report file path"
            }
          }
        },
        "performance": {
          "type": "object",
          "properties": {
            "benchmarks": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["name", "target"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Benchmark name"
                  },
                  "target": {
                    "type": "string",
                    "description": "Performance target (e.g., <100ms)"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          }
        }
      }
    },
    "documentation": {
      "type": "object",
      "properties": {
        "readme": {
          "type": "string",
          "description": "README file path"
        },
        "changelog": {
          "type": "string",
          "description": "Changelog file path"
        },
        "api": {
          "type": "string",
          "description": "API documentation path"
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "path"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Example name"
              },
              "path": {
                "type": "string",
                "description": "Example file path"
              },
              "description": {
                "type": "string",
                "maxLength": 200
              }
            }
          }
        }
      }
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "id": "energy-visualizer",
      "name": "Advanced Energy Visualizer",
      "displayName": "Energy Viz Pro",
      "description": "Advanced energy pattern visualization with custom effects and real-time monitoring",
      "version": "1.2.0",
      "author": {
        "name": "WIRTHFORGE Community",
        "email": "plugins@wirthforge.org",
        "url": "https://github.com/wirthforge/plugins"
      },
      "license": "MIT",
      "keywords": ["visualization", "energy", "monitoring", "dashboard"],
      "category": "visualization",
      "metadata": {
        "createdAt": "2024-01-10T14:30:00Z",
        "updatedAt": "2024-01-15T16:45:00Z",
        "requiredLevel": 4,
        "stability": "stable",
        "priority": "normal"
      },
      "compatibility": {
        "wirthforgeVersion": ">=1.0.0 <2.0.0",
        "platform": ["windows", "macos", "linux"],
        "architecture": ["x64", "arm64"]
      },
      "entryPoint": {
        "main": "src/index.js",
        "type": "javascript",
        "exports": [
          {
            "name": "EnergyVisualizer",
            "type": "class",
            "description": "Main visualizer class",
            "parameters": [
              {
                "name": "config",
                "type": "object",
                "required": false,
                "description": "Configuration options"
              }
            ]
          },
          {
            "name": "createPattern",
            "type": "function",
            "description": "Create custom energy pattern",
            "parameters": [
              {
                "name": "patternDef",
                "type": "object",
                "required": true,
                "description": "Pattern definition"
              }
            ],
            "returnType": "Pattern"
          }
        ]
      },
      "permissions": {
        "required": [
          "energy.read",
          "ui.create",
          "events.listen"
        ],
        "optional": [
          "storage.write",
          "file.write"
        ],
        "justification": {
          "energy.read": "Required to read energy metrics for visualization",
          "ui.create": "Creates custom dashboard widgets",
          "events.listen": "Listens for energy update events",
          "storage.write": "Saves user visualization preferences",
          "file.write": "Exports visualization data"
        }
      },
      "resources": {
        "memory": {
          "initial": "20MB",
          "maximum": "150MB"
        },
        "cpu": {
          "maxUsage": 30,
          "timeSlice": "16ms"
        },
        "storage": {
          "maxSize": "25MB",
          "persistent": true
        }
      },
      "configuration": {
        "defaults": {
          "refreshRate": 60,
          "maxDataPoints": 1000,
          "enableEffects": true
        },
        "ui": {
          "configurable": true,
          "settingsPanel": "VisualizerSettings"
        }
      },
      "hooks": {
        "lifecycle": ["onLoad", "onUnload", "onConfigChange"],
        "events": [
          {
            "event": "energy.update",
            "handler": "onEnergyUpdate",
            "priority": 3
          },
          {
            "event": "workflow.started",
            "handler": "onWorkflowStart",
            "priority": 5
          }
        ],
        "ui": [
          {
            "location": "dashboard.widget",
            "component": "EnergyVisualizerWidget",
            "title": "Energy Patterns",
            "icon": "energy-icon",
            "order": 1
          },
          {
            "location": "toolbar.button",
            "component": "VisualizerToggle",
            "title": "Toggle Visualizer",
            "icon": "viz-toggle"
          }
        ]
      },
      "files": [
        {
          "path": "src/index.js",
          "type": "source",
          "description": "Main plugin entry point",
          "size": 15420,
          "checksum": "sha256:abc123..."
        },
        {
          "path": "assets/icons/energy-icon.svg",
          "type": "asset",
          "description": "Energy visualization icon",
          "size": 2048
        },
        {
          "path": "README.md",
          "type": "documentation",
          "description": "Plugin documentation",
          "size": 8192
        }
      ],
      "security": {
        "sandboxed": true,
        "checksum": "sha256:def456...",
        "trustedSources": [
          "https://plugins.wirthforge.org/",
          "https://github.com/wirthforge/plugins/"
        ]
      },
      "documentation": {
        "readme": "README.md",
        "changelog": "CHANGELOG.md",
        "api": "docs/api.md",
        "examples": [
          {
            "name": "Basic Usage",
            "path": "examples/basic.js",
            "description": "Simple energy visualization setup"
          },
          {
            "name": "Custom Patterns",
            "path": "examples/custom-patterns.js",
            "description": "Creating custom visualization patterns"
          }
        ]
      }
    }
  ]
}
