{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://wirthforge.local/schemas/WF-TECH-004-events.json",
  "title": "WIRTHFORGE Event Schema",
  "description": "JSON Schema covering all Event types for WIRTHFORGE state management system",
  "version": "1.0.0",
  "type": "object",
  "definitions": {
    "BaseEvent": {
      "type": "object",
      "properties": {
        "session_id": {
          "type": "string",
          "pattern": "^[0-9]{8}T[0-9]{6}Z_[0-9]{3}$",
          "description": "Session identifier"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO 8601 timestamp with microsecond precision"
        },
        "type": {
          "type": "string",
          "description": "Event type identifier"
        },
        "frame_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Frame ID when event occurred (if applicable)"
        },
        "event_id": {
          "type": "string",
          "description": "Unique event identifier"
        }
      },
      "required": ["session_id", "timestamp", "type"],
      "additionalProperties": true
    },
    "EnergyUnit": {
      "type": "number",
      "minimum": 0,
      "description": "Energy Units (EU)"
    },
    "ModelId": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_\\-\\/\\.]+$",
      "description": "AI model identifier"
    }
  },
  "oneOf": [
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "system.start" },
            "data": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "WIRTHFORGE version"
                },
                "user_id": {
                  "type": "string",
                  "description": "User identifier"
                },
                "model_id": {
                  "$ref": "#/definitions/ModelId"
                },
                "hardware_tier": {
                  "type": "string",
                  "enum": ["low", "mid", "high"]
                },
                "mode": {
                  "type": "string",
                  "enum": ["offline", "online", "debug", "private"]
                },
                "features_enabled": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "config": {
                  "type": "object",
                  "description": "System configuration snapshot"
                }
              },
              "required": ["version", "user_id", "mode"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "system.end" },
            "data": {
              "type": "object",
              "properties": {
                "duration_ms": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Session duration in milliseconds"
                },
                "total_energy": {
                  "$ref": "#/definitions/EnergyUnit"
                },
                "total_events": {
                  "type": "integer",
                  "minimum": 0
                },
                "clean_shutdown": {
                  "type": "boolean"
                },
                "reason": {
                  "type": "string",
                  "enum": ["user_exit", "system_shutdown", "error", "crash"]
                }
              },
              "required": ["duration_ms", "clean_shutdown", "reason"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "energy.update" },
            "data": {
              "type": "object",
              "properties": {
                "energy": {
                  "$ref": "#/definitions/EnergyUnit",
                  "description": "Energy units in this update"
                },
                "accumulator": {
                  "$ref": "#/definitions/EnergyUnit",
                  "description": "Total accumulated energy"
                },
                "model_id": {
                  "$ref": "#/definitions/ModelId"
                },
                "fps": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 120
                },
                "frame_budget_used": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 16.67,
                  "description": "Milliseconds used in frame budget"
                },
                "diversity_index": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "token_count": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": ["energy", "accumulator", "model_id"],
              "additionalProperties": false
            }
          },
          "required": ["data", "frame_id"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "energy.peak" },
            "data": {
              "type": "object",
              "properties": {
                "energy": {
                  "$ref": "#/definitions/EnergyUnit"
                },
                "threshold": {
                  "$ref": "#/definitions/EnergyUnit",
                  "description": "Peak detection threshold"
                },
                "model_id": {
                  "$ref": "#/definitions/ModelId"
                },
                "context": {
                  "type": "string",
                  "description": "Context that triggered the peak"
                }
              },
              "required": ["energy", "threshold", "model_id"],
              "additionalProperties": false
            }
          },
          "required": ["data", "frame_id"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "user.prompt" },
            "data": {
              "type": "object",
              "properties": {
                "prompt_id": {
                  "type": "string",
                  "description": "Unique prompt identifier"
                },
                "interface": {
                  "type": "string",
                  "enum": ["text", "voice", "gesture", "api"]
                },
                "length": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Character length of prompt"
                },
                "truncated": {
                  "type": "boolean",
                  "description": "Whether prompt was truncated"
                },
                "hash": {
                  "type": "string",
                  "description": "SHA-256 hash of prompt content (privacy)"
                },
                "language": {
                  "type": "string",
                  "description": "Detected language code"
                },
                "intent": {
                  "type": "string",
                  "description": "Detected user intent category"
                }
              },
              "required": ["prompt_id", "interface", "truncated"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "user.action" },
            "data": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": ["pause", "resume", "stop", "reset", "export", "settings", "level_select"]
                },
                "context": {
                  "type": "object",
                  "description": "Action-specific context data"
                },
                "ui_element": {
                  "type": "string",
                  "description": "UI element that triggered action"
                }
              },
              "required": ["action"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "ai.output" },
            "data": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Generated token (if not privacy mode)"
                },
                "token_hash": {
                  "type": "string",
                  "description": "Token hash for privacy mode"
                },
                "prompt_id": {
                  "type": "string",
                  "description": "Associated prompt ID"
                },
                "token_index": {
                  "type": "integer",
                  "minimum": 0
                },
                "is_last": {
                  "type": "boolean"
                },
                "model_id": {
                  "$ref": "#/definitions/ModelId"
                },
                "logprobs": {
                  "type": "array",
                  "items": { "type": "number" },
                  "description": "Log probabilities for token"
                },
                "entropy": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Token entropy measure"
                },
                "generation_time_ms": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": ["prompt_id", "token_index", "is_last", "model_id"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "ai.response_complete" },
            "data": {
              "type": "object",
              "properties": {
                "prompt_id": {
                  "type": "string"
                },
                "model_id": {
                  "$ref": "#/definitions/ModelId"
                },
                "total_tokens": {
                  "type": "integer",
                  "minimum": 0
                },
                "total_energy": {
                  "$ref": "#/definitions/EnergyUnit"
                },
                "generation_time_ms": {
                  "type": "number",
                  "minimum": 0
                },
                "tokens_per_second": {
                  "type": "number",
                  "minimum": 0
                },
                "completion_reason": {
                  "type": "string",
                  "enum": ["finished", "length_limit", "stop_token", "user_interrupt", "error"]
                }
              },
              "required": ["prompt_id", "model_id", "total_tokens", "completion_reason"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "pattern.interference" },
            "data": {
              "type": "object",
              "properties": {
                "models_involved": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/ModelId" },
                  "minItems": 2
                },
                "interference_type": {
                  "type": "string",
                  "enum": ["constructive", "destructive", "neutral"]
                },
                "strength": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "frequency": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Detected frequency in Hz"
                },
                "duration_ms": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": ["models_involved", "interference_type", "strength"],
              "additionalProperties": false
            }
          },
          "required": ["data", "frame_id"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "pattern.resonance" },
            "data": {
              "type": "object",
              "properties": {
                "models_involved": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/ModelId" },
                  "minItems": 2
                },
                "resonance_frequency": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Resonance frequency in Hz"
                },
                "amplitude": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "synchronization_level": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "harmony_detected": {
                  "type": "boolean"
                },
                "energy_amplification": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Energy amplification factor"
                }
              },
              "required": ["models_involved", "resonance_frequency", "amplitude", "synchronization_level"],
              "additionalProperties": false
            }
          },
          "required": ["data", "frame_id"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "ensemble.coordination" },
            "data": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/ModelId" }
                },
                "coordination_mode": {
                  "type": "string",
                  "enum": ["parallel", "sequential", "hierarchical", "competitive"]
                },
                "diversity_index": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "consensus_reached": {
                  "type": "boolean"
                },
                "energy_distribution": {
                  "type": "object",
                  "patternProperties": {
                    "^[a-zA-Z0-9_\\-\\/\\.]+$": {
                      "$ref": "#/definitions/EnergyUnit"
                    }
                  }
                }
              },
              "required": ["models", "coordination_mode", "diversity_index"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "experience.level_unlock" },
            "data": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 5
                },
                "level_name": {
                  "type": "string",
                  "enum": ["Lightning", "Stream", "Interference", "Resonance", "Orchestration"]
                },
                "trigger_condition": {
                  "type": "string",
                  "description": "Condition that triggered unlock"
                },
                "features_unlocked": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "energy_threshold": {
                  "$ref": "#/definitions/EnergyUnit"
                }
              },
              "required": ["level", "level_name", "trigger_condition"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "experience.celebration" },
            "data": {
              "type": "object",
              "properties": {
                "celebration_type": {
                  "type": "string",
                  "enum": ["resonance_achieved", "interference_mastered", "energy_peak", "session_milestone", "level_complete"]
                },
                "intensity": {
                  "type": "string",
                  "enum": ["subtle", "moderate", "spectacular"]
                },
                "visual_effects": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "duration_ms": {
                  "type": "number",
                  "minimum": 0
                },
                "trigger_data": {
                  "type": "object",
                  "description": "Data that triggered celebration"
                }
              },
              "required": ["celebration_type", "intensity"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "health.heartbeat" },
            "data": {
              "type": "object",
              "properties": {
                "system_health": {
                  "type": "string",
                  "enum": ["healthy", "warning", "critical"]
                },
                "fps": {
                  "type": "number",
                  "minimum": 0
                },
                "memory_usage_mb": {
                  "type": "number",
                  "minimum": 0
                },
                "disk_usage_mb": {
                  "type": "number",
                  "minimum": 0
                },
                "active_connections": {
                  "type": "integer",
                  "minimum": 0
                },
                "event_queue_size": {
                  "type": "integer",
                  "minimum": 0
                },
                "models_loaded": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/ModelId" }
                }
              },
              "required": ["system_health", "fps"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "health.performance" },
            "data": {
              "type": "object",
              "properties": {
                "metric": {
                  "type": "string",
                  "enum": ["frame_drop", "high_latency", "memory_pressure", "disk_slow", "queue_backlog"]
                },
                "value": {
                  "type": "number"
                },
                "threshold": {
                  "type": "number"
                },
                "severity": {
                  "type": "string",
                  "enum": ["info", "warning", "error", "critical"]
                },
                "mitigation": {
                  "type": "string",
                  "description": "Automatic mitigation taken"
                }
              },
              "required": ["metric", "value", "severity"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "state.snapshot_created" },
            "data": {
              "type": "object",
              "properties": {
                "snapshot_id": {
                  "type": "integer",
                  "minimum": 0
                },
                "snapshot_type": {
                  "type": "string",
                  "enum": ["periodic", "session_end", "migration", "manual"]
                },
                "state_size_bytes": {
                  "type": "integer",
                  "minimum": 0
                },
                "events_since_last": {
                  "type": "integer",
                  "minimum": 0
                },
                "compression_ratio": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                }
              },
              "required": ["snapshot_id", "snapshot_type", "state_size_bytes"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    },
    {
      "allOf": [
        { "$ref": "#/definitions/BaseEvent" },
        {
          "properties": {
            "type": { "const": "error" },
            "data": {
              "type": "object",
              "properties": {
                "error_code": {
                  "type": "string"
                },
                "error_message": {
                  "type": "string"
                },
                "component": {
                  "type": "string",
                  "enum": ["orchestrator", "decipher", "state_manager", "websocket", "model", "ui"]
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"]
                },
                "recoverable": {
                  "type": "boolean"
                },
                "stack_trace": {
                  "type": "string"
                },
                "context": {
                  "type": "object",
                  "description": "Error context data"
                }
              },
              "required": ["error_code", "error_message", "component", "severity", "recoverable"],
              "additionalProperties": false
            }
          },
          "required": ["data"]
        }
      ]
    }
  ],
  "examples": [
    {
      "session_id": "20250817T194800Z_001",
      "timestamp": "2025-08-17T19:48:05.123456Z",
      "type": "energy.update",
      "frame_id": 1234,
      "event_id": "evt_001",
      "data": {
        "energy": 4.2,
        "accumulator": 847.3,
        "model_id": "ollama/llama2:7b",
        "fps": 60.0,
        "frame_budget_used": 12.3,
        "diversity_index": 0.847,
        "token_count": 23
      }
    },
    {
      "session_id": "20250817T194800Z_001",
      "timestamp": "2025-08-17T19:48:05.130000Z",
      "type": "user.prompt",
      "event_id": "evt_002",
      "data": {
        "prompt_id": "prompt_abc123",
        "interface": "text",
        "length": 45,
        "truncated": false,
        "hash": "a1b2c3d4e5f6...",
        "language": "en",
        "intent": "question"
      }
    },
    {
      "session_id": "20250817T194800Z_001",
      "timestamp": "2025-08-17T19:48:05.456789Z",
      "type": "pattern.resonance",
      "frame_id": 1267,
      "event_id": "evt_003",
      "data": {
        "models_involved": ["ollama/llama2:7b", "ollama/mistral:7b"],
        "resonance_frequency": 440.0,
        "amplitude": 0.85,
        "synchronization_level": 0.92,
        "harmony_detected": true,
        "energy_amplification": 1.47
      }
    }
  ]
}
