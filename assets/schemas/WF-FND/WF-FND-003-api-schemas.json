{
  "document": "WF-FND-003",
  "title": "API Schema Definitions and Transport Contracts",
  "version": "1.0.0",
  "lastUpdated": "2025-01-12",
  "description": "Complete API schema definitions for WIRTHFORGE Layer 4 transport protocols and data contracts",
  "websocketProtocol": {
    "version": "wirthforge-v1",
    "connectionEndpoint": "/ws",
    "messageEnvelope": {
      "type": "object",
      "required": ["type", "payload", "timestamp"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["INPUT", "EVENT", "STATE", "CONTROL", "ERROR", "ACK", "HEARTBEAT"],
          "description": "Message category"
        },
        "subtype": {
          "type": "string",
          "description": "Specific message type within category"
        },
        "payload": {
          "type": "object",
          "description": "Message-specific data"
        },
        "timestamp": {
          "type": "number",
          "description": "Unix timestamp in milliseconds"
        },
        "requestId": {
          "type": "string",
          "description": "Optional correlation ID for request/response"
        },
        "sessionId": {
          "type": "string",
          "description": "Session identifier"
        }
      }
    },
    "messageTypes": {
      "userInput": {
        "type": "INPUT",
        "subtype": "USER_PROMPT",
        "payload": {
          "type": "object",
          "required": ["text"],
          "properties": {
            "text": {
              "type": "string",
              "maxLength": 10000,
              "description": "User prompt text"
            },
            "modelPreference": {
              "type": "string",
              "description": "Preferred model name"
            },
            "parameters": {
              "type": "object",
              "properties": {
                "temperature": {"type": "number", "minimum": 0, "maximum": 2},
                "maxTokens": {"type": "number", "minimum": 1, "maximum": 4000},
                "stream": {"type": "boolean", "default": true}
              }
            },
            "context": {
              "type": "object",
              "properties": {
                "conversationHistory": {"type": "array"},
                "userPath": {"type": "string", "enum": ["forge", "scholar", "sage"]},
                "currentLevel": {"type": "number", "minimum": 1, "maximum": 5}
              }
            }
          }
        }
      },
      "controlAction": {
        "type": "CONTROL",
        "subtypes": {
          "STOP_GENERATION": {
            "payload": {
              "type": "object",
              "properties": {
                "requestId": {"type": "string", "description": "ID of generation to stop"},
                "reason": {"type": "string", "enum": ["user_request", "timeout", "error"]}
              }
            }
          },
          "PAUSE_GENERATION": {
            "payload": {
              "type": "object",
              "properties": {
                "requestId": {"type": "string"},
                "duration": {"type": "number", "description": "Pause duration in ms"}
              }
            }
          },
          "CHANGE_MODEL": {
            "payload": {
              "type": "object",
              "required": ["modelName"],
              "properties": {
                "modelName": {"type": "string"},
                "parameters": {"type": "object"}
              }
            }
          },
          "ENABLE_COUNCIL": {
            "payload": {
              "type": "object",
              "properties": {
                "models": {"type": "array", "items": {"type": "string"}},
                "strategy": {"type": "string", "enum": ["parallel", "sequential", "consensus"]}
              }
            }
          }
        }
      },
      "tokenStream": {
        "type": "EVENT",
        "subtype": "TOKEN_STREAM",
        "payload": {
          "type": "object",
          "required": ["requestId", "token", "energy"],
          "properties": {
            "requestId": {"type": "string"},
            "streamId": {"type": "string", "description": "Unique stream identifier"},
            "modelName": {"type": "string"},
            "token": {"type": "string"},
            "tokenIndex": {"type": "number"},
            "energy": {"type": "number", "description": "Energy Units contributed"},
            "timestamp": {"type": "number"},
            "duration": {"type": "number", "description": "Time since last token (ms)"},
            "probability": {"type": "number", "minimum": 0, "maximum": 1},
            "isComplete": {"type": "boolean", "default": false}
          }
        }
      },
      "energyUpdate": {
        "type": "EVENT",
        "subtype": "ENERGY_UPDATE",
        "payload": {
          "type": "object",
          "required": ["totalEnergy", "currentRate"],
          "properties": {
            "totalEnergy": {"type": "number", "description": "Accumulated Energy Units"},
            "currentRate": {"type": "number", "description": "Current tokens per second"},
            "activeStreams": {"type": "number", "description": "Number of active model streams"},
            "sessionMetrics": {
              "type": "object",
              "properties": {
                "totalTokens": {"type": "number"},
                "averageTPS": {"type": "number"},
                "sessionDuration": {"type": "number", "description": "Duration in seconds"},
                "energyEfficiency": {"type": "number", "description": "EU per token ratio"}
              }
            },
            "levelProgress": {
              "type": "object",
              "properties": {
                "currentLevel": {"type": "number", "minimum": 1, "maximum": 5},
                "progressToNext": {"type": "number", "minimum": 0, "maximum": 1},
                "unlockedFeatures": {"type": "array", "items": {"type": "string"}}
              }
            }
          }
        }
      },
      "interferenceEvent": {
        "type": "EVENT",
        "subtype": "INTERFERENCE",
        "payload": {
          "type": "object",
          "required": ["pattern", "models", "correlation"],
          "properties": {
            "pattern": {"type": "string", "enum": ["constructive", "destructive", "neutral"]},
            "models": {"type": "array", "items": {"type": "string"}},
            "correlation": {"type": "number", "minimum": -1, "maximum": 1},
            "strength": {"type": "number", "minimum": 0, "maximum": 1},
            "duration": {"type": "number", "description": "Pattern duration in ms"},
            "tokenAlignment": {
              "type": "object",
              "properties": {
                "simultaneousTokens": {"type": "array"},
                "timingOffset": {"type": "number", "description": "Offset between streams in ms"}
              }
            }
          }
        }
      },
      "resonanceEvent": {
        "type": "EVENT",
        "subtype": "RESONANCE",
        "payload": {
          "type": "object",
          "required": ["models", "resonanceLevel"],
          "properties": {
            "models": {"type": "array", "items": {"type": "string"}},
            "resonanceLevel": {"type": "number", "minimum": 0, "maximum": 1},
            "phaseLock": {"type": "number", "minimum": 0, "maximum": 1},
            "frequency": {"type": "number", "description": "Resonance frequency in Hz"},
            "celebration": {
              "type": "object",
              "properties": {
                "type": {"type": "string", "enum": ["aurora", "mandala", "burst"]},
                "intensity": {"type": "number", "minimum": 0, "maximum": 1},
                "duration": {"type": "number", "description": "Celebration duration in ms"}
              }
            }
          }
        }
      },
      "systemState": {
        "type": "STATE",
        "subtype": "SYSTEM_UPDATE",
        "payload": {
          "type": "object",
          "properties": {
            "systemHealth": {
              "type": "object",
              "properties": {
                "status": {"type": "string", "enum": ["healthy", "degraded", "error"]},
                "cpuUsage": {"type": "number", "minimum": 0, "maximum": 100},
                "memoryUsage": {"type": "number", "minimum": 0, "maximum": 100},
                "gpuUsage": {"type": "number", "minimum": 0, "maximum": 100}
              }
            },
            "loadedModels": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "size": {"type": "string"},
                  "status": {"type": "string", "enum": ["loaded", "loading", "unloaded"]},
                  "memoryUsage": {"type": "number"}
                }
              }
            },
            "capabilities": {
              "type": "object",
              "properties": {
                "maxParallelModels": {"type": "number"},
                "supportedLevels": {"type": "array", "items": {"type": "number"}},
                "hardwareTier": {"type": "string", "enum": ["low", "mid", "high", "hybrid"]}
              }
            }
          }
        }
      },
      "errorEvent": {
        "type": "ERROR",
        "subtypes": {
          "MODEL_ERROR": {
            "payload": {
              "type": "object",
              "required": ["code", "message"],
              "properties": {
                "code": {"type": "string", "enum": ["MODEL_NOT_FOUND", "MODEL_OOM", "MODEL_TIMEOUT", "MODEL_CRASH"]},
                "message": {"type": "string"},
                "modelName": {"type": "string"},
                "requestId": {"type": "string"},
                "details": {"type": "object"},
                "recoverable": {"type": "boolean"},
                "suggestedAction": {"type": "string"}
              }
            }
          },
          "SYSTEM_ERROR": {
            "payload": {
              "type": "object",
              "required": ["code", "message"],
              "properties": {
                "code": {"type": "string", "enum": ["INSUFFICIENT_RESOURCES", "NETWORK_ERROR", "AUTH_FAILED", "RATE_LIMITED"]},
                "message": {"type": "string"},
                "severity": {"type": "string", "enum": ["low", "medium", "high", "critical"]},
                "timestamp": {"type": "number"},
                "context": {"type": "object"}
              }
            }
          }
        }
      },
      "acknowledgment": {
        "type": "ACK",
        "payload": {
          "type": "object",
          "required": ["requestId", "status"],
          "properties": {
            "requestId": {"type": "string"},
            "status": {"type": "string", "enum": ["received", "processing", "completed", "failed"]},
            "message": {"type": "string"},
            "timestamp": {"type": "number"}
          }
        }
      },
      "heartbeat": {
        "type": "HEARTBEAT",
        "payload": {
          "type": "object",
          "properties": {
            "serverTime": {"type": "number"},
            "uptime": {"type": "number", "description": "Server uptime in seconds"},
            "activeConnections": {"type": "number"},
            "systemLoad": {"type": "number", "minimum": 0, "maximum": 1}
          }
        }
      }
    }
  },
  "restApiEndpoints": {
    "baseUrl": "/api/v1",
    "authentication": {
      "type": "Bearer",
      "header": "Authorization",
      "description": "Optional API key for multi-user or remote access"
    },
    "endpoints": {
      "getModels": {
        "method": "GET",
        "path": "/models",
        "description": "List available AI models",
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "models": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {"type": "string"},
                    "size": {"type": "string"},
                    "description": {"type": "string"},
                    "capabilities": {"type": "array", "items": {"type": "string"}},
                    "parameters": {"type": "object"},
                    "loaded": {"type": "boolean"},
                    "memoryRequirement": {"type": "number"}
                  }
                }
              }
            }
          }
        }
      },
      "getSystemStatus": {
        "method": "GET",
        "path": "/status",
        "description": "System health and capability check",
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "status": {"type": "string", "enum": ["healthy", "degraded", "error"]},
              "version": {"type": "string"},
              "uptime": {"type": "number"},
              "capabilities": {
                "type": "object",
                "properties": {
                  "maxParallelModels": {"type": "number"},
                  "supportedLevels": {"type": "array"},
                  "hardwareTier": {"type": "string"}
                }
              },
              "resources": {
                "type": "object",
                "properties": {
                  "cpu": {"type": "number"},
                  "memory": {"type": "number"},
                  "gpu": {"type": "number"}
                }
              }
            }
          }
        }
      },
      "createSession": {
        "method": "POST",
        "path": "/session",
        "description": "Create new user session",
        "requestBody": {
          "type": "object",
          "properties": {
            "userPath": {"type": "string", "enum": ["forge", "scholar", "sage"]},
            "preferences": {"type": "object"},
            "clientInfo": {"type": "object"}
          }
        },
        "responses": {
          "201": {
            "type": "object",
            "properties": {
              "sessionId": {"type": "string"},
              "userId": {"type": "string"},
              "expiresAt": {"type": "number"},
              "capabilities": {"type": "object"},
              "initialLevel": {"type": "number", "default": 1}
            }
          }
        }
      },
      "getSession": {
        "method": "GET",
        "path": "/session/{sessionId}",
        "description": "Get session state and metrics",
        "parameters": {
          "sessionId": {"type": "string", "in": "path", "required": true}
        },
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "sessionId": {"type": "string"},
              "userId": {"type": "string"},
              "createdAt": {"type": "number"},
              "lastActivity": {"type": "number"},
              "currentLevel": {"type": "number"},
              "metrics": {
                "type": "object",
                "properties": {
                  "totalTokens": {"type": "number"},
                  "totalEnergy": {"type": "number"},
                  "sessionDuration": {"type": "number"},
                  "modelsUsed": {"type": "array"}
                }
              },
              "state": {"type": "object"}
            }
          }
        }
      },
      "updateSession": {
        "method": "PATCH",
        "path": "/session/{sessionId}",
        "description": "Update session preferences or state",
        "parameters": {
          "sessionId": {"type": "string", "in": "path", "required": true}
        },
        "requestBody": {
          "type": "object",
          "properties": {
            "preferences": {"type": "object"},
            "currentLevel": {"type": "number", "minimum": 1, "maximum": 5}
          }
        },
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "sessionId": {"type": "string"},
              "updated": {"type": "boolean"},
              "timestamp": {"type": "number"}
            }
          }
        }
      },
      "getMetrics": {
        "method": "GET",
        "path": "/metrics",
        "description": "System-wide metrics and analytics",
        "parameters": {
          "timeRange": {"type": "string", "in": "query", "enum": ["1h", "24h", "7d", "30d"]},
          "granularity": {"type": "string", "in": "query", "enum": ["minute", "hour", "day"]}
        },
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "timeRange": {"type": "string"},
              "metrics": {
                "type": "object",
                "properties": {
                  "totalSessions": {"type": "number"},
                  "totalTokens": {"type": "number"},
                  "totalEnergy": {"type": "number"},
                  "averageTPS": {"type": "number"},
                  "modelUsage": {"type": "object"},
                  "levelDistribution": {"type": "object"}
                }
              },
              "timeSeries": {"type": "array"}
            }
          }
        }
      }
    }
  },
  "errorHandling": {
    "httpErrorCodes": {
      "400": {
        "description": "Bad Request - Invalid input or malformed JSON",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "BAD_REQUEST"},
            "message": {"type": "string"},
            "details": {"type": "object"},
            "timestamp": {"type": "number"}
          }
        }
      },
      "401": {
        "description": "Unauthorized - Invalid or missing authentication",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "UNAUTHORIZED"},
            "message": {"type": "string", "value": "Authentication required"}
          }
        }
      },
      "404": {
        "description": "Not Found - Resource does not exist",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "NOT_FOUND"},
            "resource": {"type": "string"},
            "message": {"type": "string"}
          }
        }
      },
      "429": {
        "description": "Rate Limited - Too many requests",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "RATE_LIMITED"},
            "retryAfter": {"type": "number", "description": "Seconds to wait"},
            "limit": {"type": "number"},
            "remaining": {"type": "number"}
          }
        }
      },
      "500": {
        "description": "Internal Server Error - System error",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "INTERNAL_ERROR"},
            "message": {"type": "string"},
            "requestId": {"type": "string"},
            "timestamp": {"type": "number"}
          }
        }
      },
      "503": {
        "description": "Service Unavailable - System overloaded or maintenance",
        "schema": {
          "type": "object",
          "properties": {
            "error": {"type": "string", "value": "SERVICE_UNAVAILABLE"},
            "message": {"type": "string"},
            "retryAfter": {"type": "number"}
          }
        }
      }
    },
    "websocketErrors": {
      "connectionErrors": [
        {"code": 1000, "description": "Normal closure"},
        {"code": 1001, "description": "Going away"},
        {"code": 1002, "description": "Protocol error"},
        {"code": 1003, "description": "Unsupported data"},
        {"code": 1011, "description": "Server error"}
      ],
      "applicationErrors": {
        "INVALID_MESSAGE": {
          "code": 4000,
          "description": "Message does not conform to schema"
        },
        "AUTHENTICATION_FAILED": {
          "code": 4001,
          "description": "WebSocket authentication failed"
        },
        "RATE_LIMITED": {
          "code": 4002,
          "description": "Message rate limit exceeded"
        },
        "SESSION_EXPIRED": {
          "code": 4003,
          "description": "Session has expired"
        }
      }
    }
  },
  "performanceSpecifications": {
    "websocketLimits": {
      "maxConnections": 1000,
      "maxMessageSize": "1MB",
      "maxMessagesPerSecond": 100,
      "heartbeatInterval": "30s",
      "connectionTimeout": "60s"
    },
    "httpLimits": {
      "maxRequestSize": "10MB",
      "requestTimeout": "30s",
      "rateLimitDefault": "100 requests per minute",
      "rateLimitBurst": "200 requests per minute"
    },
    "realTimeRequirements": {
      "maxLatency": "50ms",
      "targetFrameRate": "60Hz",
      "maxBackpressureBuffer": "1000 events",
      "eventBatchSize": "10 events per frame"
    }
  },
  "securitySpecifications": {
    "authentication": {
      "optional": true,
      "methods": ["bearer_token", "session_cookie"],
      "tokenExpiry": "24 hours",
      "refreshSupported": true
    },
    "authorization": {
      "levels": ["guest", "user", "admin"],
      "resourceAccess": {
        "guest": ["basic_models", "level_1_features"],
        "user": ["all_models", "all_levels", "session_persistence"],
        "admin": ["system_metrics", "user_management", "configuration"]
      }
    },
    "dataProtection": {
      "encryptionAtRest": false,
      "encryptionInTransit": "TLS 1.3",
      "dataRetention": "session_only",
      "privacyMode": "local_first"
    }
  }
}
