{
  "document": "WF-FND-003",
  "title": "Layer Contracts and Interface Specifications",
  "version": "1.0.0",
  "lastUpdated": "2025-01-12",
  "description": "Defines the contracts, interfaces, and data structures for each layer in the WIRTHFORGE five-layer architecture",
  "layerContracts": {
    "L1_InputIdentity": {
      "purpose": "Entry point handling user actions and identity context",
      "responsibilities": [
        "User/session identity validation",
        "Input normalization and validation",
        "Session state management",
        "Security token verification"
      ],
      "inputContract": {
        "consumes": {
          "rawRequests": {
            "type": "object",
            "properties": {
              "requestId": {"type": "string", "required": true},
              "authToken": {"type": "string", "required": false},
              "sessionId": {"type": "string", "required": false},
              "clientInfo": {"type": "object", "required": false},
              "payload": {"type": "any", "required": true}
            },
            "source": "Layer 4 (Transport)"
          }
        }
      },
      "outputContract": {
        "produces": {
          "inputEvent": {
            "type": "object",
            "properties": {
              "requestId": {"type": "string", "description": "Unique tracking ID"},
              "userId": {"type": "string", "description": "Resolved user identity"},
              "sessionId": {"type": "string", "description": "Session/conversation context"},
              "source": {"type": "string", "description": "UI door/portal origin"},
              "inputType": {"type": "string", "enum": ["prompt", "command", "setting", "control"]},
              "payload": {"type": "any", "description": "Validated content"},
              "timestamp": {"type": "number", "description": "Unix timestamp"},
              "metadata": {
                "type": "object",
                "properties": {
                  "userRole": {"type": "string", "enum": ["forge", "scholar", "sage"]},
                  "capabilities": {"type": "array", "items": {"type": "string"}},
                  "preferences": {"type": "object"}
                }
              }
            },
            "destination": "Layer 3 (Orchestrator)"
          }
        }
      },
      "allowedDirections": ["L1 → L3", "L4 → L1"],
      "antiPatterns": [
        "Heavy processing or synchronous calls",
        "Altering global system state",
        "Bypassing identity validation",
        "Direct UI logic or formatting"
      ]
    },
    "L2_ModelCompute": {
      "purpose": "AI inference layer with local-first execution",
      "responsibilities": [
        "Model runtime management",
        "Token stream generation",
        "Parallel model execution",
        "Resource allocation and optimization"
      ],
      "inputContract": {
        "consumes": {
          "modelRequest": {
            "type": "object",
            "properties": {
              "requestId": {"type": "string", "required": true},
              "modelName": {"type": "string", "required": true},
              "prompt": {"type": "string", "required": true},
              "parameters": {
                "type": "object",
                "properties": {
                  "temperature": {"type": "number", "default": 0.7},
                  "maxTokens": {"type": "number", "default": 1000},
                  "topP": {"type": "number", "default": 0.9},
                  "stream": {"type": "boolean", "default": true}
                }
              },
              "context": {"type": "object", "required": false}
            },
            "source": "Layer 3 (Orchestrator)"
          }
        }
      },
      "outputContract": {
        "produces": {
          "tokenEvent": {
            "type": "object",
            "properties": {
              "requestId": {"type": "string"},
              "modelName": {"type": "string"},
              "token": {"type": "string", "description": "Generated token text"},
              "tokenIndex": {"type": "number", "description": "Position in sequence"},
              "timestamp": {"type": "number", "description": "Generation timestamp"},
              "duration": {"type": "number", "description": "Time since last token (ms)"},
              "probability": {"type": "number", "description": "Token probability if available"},
              "isComplete": {"type": "boolean", "default": false}
            },
            "destination": "Layer 3 (Orchestrator)"
          },
          "completionStats": {
            "type": "object",
            "properties": {
              "requestId": {"type": "string"},
              "modelName": {"type": "string"},
              "evalCount": {"type": "number", "description": "Total tokens generated"},
              "evalDuration": {"type": "number", "description": "Total generation time (ms)"},
              "loadDuration": {"type": "number", "description": "Model load time (ms)"},
              "promptEvalCount": {"type": "number", "description": "Prompt tokens processed"},
              "promptEvalDuration": {"type": "number", "description": "Prompt processing time (ms)"}
            },
            "destination": "Layer 3 (Orchestrator)"
          }
        }
      },
      "allowedDirections": ["L3 → L2", "L2 → L3"],
      "antiPatterns": [
        "Blocking orchestrator with synchronous calls",
        "Failing to stream incremental results",
        "Using cloud by default without user consent",
        "Bypassing orchestrator for multi-prompt handling",
        "Loading all models simultaneously on low-end hardware"
      ]
    },
    "L3_OrchestrationEnergy": {
      "purpose": "Heart of system managing state, energy calculations, and coordination",
      "responsibilities": [
        "Model orchestration and scheduling",
        "Energy Unit (EU) calculations",
        "Global state management (single source of truth)",
        "60Hz update loop coordination",
        "Event publishing and pattern detection"
      ],
      "inputContract": {
        "consumes": {
          "inputEvents": {
            "type": "InputEvent",
            "source": "Layer 1 (Identity)"
          },
          "tokenStreams": {
            "type": "TokenEvent",
            "source": "Layer 2 (Model Compute)"
          },
          "controlSignals": {
            "type": "object",
            "properties": {
              "action": {"type": "string", "enum": ["stop", "pause", "resume", "cancel"]},
              "target": {"type": "string", "description": "Request ID or 'all'"},
              "timestamp": {"type": "number"}
            },
            "source": "Layer 4 (Transport)"
          }
        }
      },
      "outputContract": {
        "produces": {
          "energyEvent": {
            "type": "object",
            "properties": {
              "eventType": {"type": "string", "enum": ["TOKEN_STREAM", "ENERGY_UPDATE", "COMPLETION", "ERROR"]},
              "requestId": {"type": "string"},
              "timestamp": {"type": "number"},
              "data": {
                "type": "object",
                "properties": {
                  "token": {"type": "string"},
                  "energy": {"type": "number", "description": "EU contribution"},
                  "totalEnergy": {"type": "number", "description": "Accumulated EU"},
                  "tokensPerSecond": {"type": "number"},
                  "modelName": {"type": "string"},
                  "streamId": {"type": "string"}
                }
              }
            },
            "destination": "Layer 4 (Transport)"
          },
          "stateUpdate": {
            "type": "object",
            "properties": {
              "timestamp": {"type": "number"},
              "globalState": {
                "type": "object",
                "properties": {
                  "totalEnergy": {"type": "number"},
                  "activeStreams": {"type": "number"},
                  "currentLevel": {"type": "number", "minimum": 1, "maximum": 5},
                  "sessionMetrics": {
                    "type": "object",
                    "properties": {
                      "totalTokens": {"type": "number"},
                      "averageTPS": {"type": "number"},
                      "sessionDuration": {"type": "number"}
                    }
                  }
                }
              }
            },
            "destination": "Layer 4 (Transport)"
          },
          "interferenceEvent": {
            "type": "object",
            "properties": {
              "eventType": {"type": "string", "value": "INTERFERENCE"},
              "pattern": {"type": "string", "enum": ["constructive", "destructive", "neutral"]},
              "models": {"type": "array", "items": {"type": "string"}},
              "correlation": {"type": "number", "minimum": -1, "maximum": 1},
              "timestamp": {"type": "number"}
            },
            "destination": "Layer 4 (Transport)"
          }
        }
      },
      "stateManagement": {
        "updateFrequency": "60Hz (16.67ms intervals)",
        "stateStore": {
          "type": "object",
          "properties": {
            "sessions": {"type": "object", "description": "Per-session state"},
            "globalMetrics": {"type": "object", "description": "System-wide metrics"},
            "energyAccumulator": {"type": "number", "description": "Total EU across all sessions"},
            "activeModels": {"type": "array", "description": "Currently loaded models"},
            "interferenceBuffer": {"type": "array", "description": "Recent token events for correlation"}
          }
        },
        "persistenceRules": [
          "Only L3 writes to state store",
          "State updates are atomic within 16.67ms frame",
          "No blocking operations in update loop",
          "Graceful degradation on resource constraints"
        ]
      },
      "allowedDirections": ["L1 → L3", "L2 → L3", "L3 → L4", "L3 → L2"],
      "antiPatterns": [
        "Allowing other layers to modify state directly",
        "Blocking the 60Hz update loop",
        "Skipping event schema contracts",
        "State inconsistency between sessions",
        "Direct communication with L5 bypassing L4"
      ]
    },
    "L4_ContractsTransport": {
      "purpose": "Interface layer connecting core system to external world",
      "responsibilities": [
        "WebSocket and HTTP API management",
        "Schema validation and enforcement",
        "Authentication and authorization",
        "Protocol transformation and routing"
      ],
      "inputContract": {
        "consumes": {
          "clientRequests": {
            "type": "object",
            "properties": {
              "protocol": {"type": "string", "enum": ["websocket", "http"]},
              "endpoint": {"type": "string"},
              "headers": {"type": "object"},
              "body": {"type": "any"},
              "clientId": {"type": "string"}
            },
            "source": "External clients (L5)"
          },
          "systemEvents": {
            "type": "EnergyEvent | StateUpdate | InterferenceEvent",
            "source": "Layer 3 (Orchestrator)"
          }
        }
      },
      "outputContract": {
        "produces": {
          "websocketMessage": {
            "type": "object",
            "properties": {
              "type": {"type": "string", "enum": ["EVENT", "STATE", "ERROR", "ACK"]},
              "subtype": {"type": "string"},
              "payload": {"type": "any"},
              "timestamp": {"type": "number"},
              "clientId": {"type": "string"}
            },
            "destination": "External clients (L5)"
          },
          "httpResponse": {
            "type": "object",
            "properties": {
              "statusCode": {"type": "number"},
              "headers": {"type": "object"},
              "body": {"type": "any"},
              "contentType": {"type": "string", "default": "application/json"}
            },
            "destination": "External clients (L5)"
          }
        }
      },
      "apiEndpoints": {
        "websocket": {
          "path": "/ws",
          "protocols": ["wirthforge-v1"],
          "messageTypes": [
            "USER_INPUT",
            "CONTROL_ACTION",
            "SUBSCRIPTION",
            "HEARTBEAT"
          ]
        },
        "rest": {
          "endpoints": [
            {"method": "GET", "path": "/api/v1/models", "description": "List available models"},
            {"method": "GET", "path": "/api/v1/status", "description": "System health check"},
            {"method": "POST", "path": "/api/v1/session", "description": "Create new session"},
            {"method": "GET", "path": "/api/v1/session/{id}", "description": "Get session state"}
          ]
        }
      },
      "allowedDirections": ["L5 → L4", "L4 → L1", "L3 → L4", "L4 → L5"],
      "antiPatterns": [
        "Heavy processing in request/response path",
        "Including business logic in transport layer",
        "Bypassing authentication checks",
        "Sending unfiltered internal data to clients",
        "Ignoring backpressure and connection limits"
      ]
    },
    "L5_VisualizationUX": {
      "purpose": "Front-end layer delivering visual AI experience",
      "responsibilities": [
        "Visual metaphor rendering (lightning, streams, fields)",
        "Progressive complexity management (Levels 1-5)",
        "User interaction handling",
        "Real-time animation at 60fps"
      ],
      "inputContract": {
        "consumes": {
          "systemEvents": {
            "type": "WebSocketMessage | HttpResponse",
            "source": "Layer 4 (Transport)"
          },
          "userInteractions": {
            "type": "object",
            "properties": {
              "eventType": {"type": "string", "enum": ["click", "keypress", "input", "gesture"]},
              "target": {"type": "string", "description": "UI element identifier"},
              "data": {"type": "any", "description": "Interaction-specific data"},
              "timestamp": {"type": "number"}
            },
            "source": "User device"
          }
        }
      },
      "outputContract": {
        "produces": {
          "userActions": {
            "type": "object",
            "properties": {
              "action": {"type": "string", "enum": ["prompt", "control", "config", "navigation"]},
              "data": {"type": "any"},
              "sessionId": {"type": "string"},
              "timestamp": {"type": "number"}
            },
            "destination": "Layer 4 (Transport)"
          }
        }
      },
      "visualContracts": {
        "lightningBolt": {
          "dataSource": "TOKEN_STREAM events",
          "properties": {
            "thickness": "proportional to token energy",
            "glow": "based on generation speed",
            "color": "golden yellow spectrum (#fbbf24)"
          }
        },
        "energyStream": {
          "dataSource": "ENERGY_UPDATE events",
          "properties": {
            "width": "proportional to throughput",
            "flow": "animated based on TPS",
            "color": "blue spectrum (#60a5fa)"
          }
        },
        "interferencePattern": {
          "dataSource": "INTERFERENCE events",
          "properties": {
            "constructive": "purple zones (#c084fc)",
            "destructive": "red zones (#ef4444)",
            "correlation": "pattern intensity"
          }
        }
      },
      "progressiveLevels": {
        "level1": {
          "features": ["Single lightning bolt", "Basic metrics", "Always-visible legend"],
          "unlockCriteria": "Default (entry level)"
        },
        "level2": {
          "features": ["Multiple streams", "Interference patterns", "Model tags"],
          "unlockCriteria": "100+ tokens generated, 5+ minutes usage"
        },
        "level3": {
          "features": ["Node builder", "Architecture view", "Pipeline creation"],
          "unlockCriteria": "Parallel model usage, 500+ tokens"
        },
        "level4": {
          "features": ["Adaptive UI", "Personalization", "Usage learning"],
          "unlockCriteria": "Multiple sessions, diverse model usage"
        },
        "level5": {
          "features": ["Full orchestra", "Resonance detection", "Advanced analytics"],
          "unlockCriteria": "Expert usage patterns, council orchestration"
        }
      },
      "allowedDirections": ["L4 → L5", "L5 → L4"],
      "antiPatterns": [
        "Creating shadow logic duplicating backend calculations",
        "Exposing raw internal data outside audit mode",
        "Not handling errors or unknown events gracefully",
        "Heavy computation on main thread affecting 60fps",
        "Bypassing L4 to communicate with lower layers"
      ]
    }
  },
  "crossLayerRules": {
    "communicationFlow": {
      "allowed": [
        "L5 ↔ L4",
        "L4 ↔ L1",
        "L4 ↔ L3",
        "L3 ↔ L2",
        "L3 ↔ L1"
      ],
      "forbidden": [
        "L5 ↔ L3 (direct)",
        "L5 ↔ L2 (direct)",
        "L5 ↔ L1 (direct)",
        "L4 ↔ L2 (direct)",
        "L2 ↔ L1 (direct)"
      ]
    },
    "dataOwnership": {
      "L1": ["User identity", "Session context", "Input validation"],
      "L2": ["Model runtimes", "Token generation", "Inference resources"],
      "L3": ["System state", "Energy calculations", "Event coordination"],
      "L4": ["API schemas", "Transport protocols", "Client connections"],
      "L5": ["UI state", "Visual rendering", "User preferences"]
    },
    "performanceRequirements": {
      "globalFrameRate": "60Hz (16.67ms budget)",
      "nonBlockingRule": "No layer may block the main update loop",
      "backpressureHandling": "Each layer must handle input overflow gracefully",
      "errorPropagation": "Errors must be structured and propagated upward through proper channels"
    }
  },
  "validationRules": {
    "schemaCompliance": "All inter-layer messages must conform to defined schemas",
    "boundaryRespect": "Layers must only communicate through allowed directions",
    "stateConsistency": "Only L3 may write to global state",
    "contractFidelity": "Input/output contracts must be honored exactly",
    "performanceCompliance": "60Hz budget must be maintained across all operations"
  }
}
