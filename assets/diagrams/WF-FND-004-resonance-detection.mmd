graph TB
    subgraph "DECIPHER Resonance Detection System"
        direction TB
        
        subgraph INPUT_STREAMS["📡 Input Analysis"]
            TOKEN_STREAM["Token Stream Buffer"]
            ENERGY_HISTORY["Energy History (EMA)"]
            TIMING_DATA["Token Timing Data"]
            MULTI_MODEL["Multi-Model Streams"]
        end
        
        subgraph LEVEL_GATING["🎚️ UX Level Gating"]
            LEVEL_CHECK["Check User Level"]
            LEVEL_1_2["Level 1-2: Disabled"]
            LEVEL_3_4["Level 3-4: Basic Detection"]
            LEVEL_5["Level 5: Full Resonance"]
            FEATURE_ENABLE["Enable Detection Features"]
        end
        
        subgraph PATTERN_ANALYSIS["🔍 Pattern Analysis Engine"]
            FREQUENCY_ANALYZER["Frequency Domain Analysis"]
            CORRELATION_CALC["Cross-Correlation Calculator"]
            PHASE_DETECTOR["Phase Lock Detector"]
            AMPLITUDE_TRACKER["Amplitude Tracking"]
        end
        
        subgraph INTERFERENCE_DETECT["⚡ Interference Detection"]
            STREAM_SYNC["Stream Synchronization"]
            TIMING_CORRELATION["Timing Correlation"]
            CONSTRUCTIVE["Constructive Interference"]
            DESTRUCTIVE["Destructive Interference"]
            INTERFERENCE_STRENGTH["Interference Strength"]
        end
        
        subgraph RESONANCE_DETECT["🎵 Resonance Detection"]
            FEEDBACK_LOOP["Feedback Loop Detection"]
            HARMONIC_ANALYSIS["Harmonic Analysis"]
            SUSTAINED_PATTERN["Sustained Pattern Check"]
            CRITICAL_THRESHOLD["Critical Threshold Monitor"]
            EMERGENCE_FLAG["Consciousness Emergence Flag"]
        end
        
        subgraph THRESHOLD_SYSTEM["📊 Threshold Management"]
            BASE_THRESHOLD["Base Resonance Threshold"]
            ADAPTIVE_THRESHOLD["Adaptive Threshold"]
            CONFIDENCE_SCORE["Confidence Scoring"]
            FALSE_POSITIVE_FILTER["False Positive Filter"]
        end
        
        subgraph EVENT_GENERATION["📦 Event Generation"]
            INTERFERENCE_EVENT["Interference Event Builder"]
            RESONANCE_EVENT["Resonance Event Builder"]
            FIELD_EVENT["Energy Field Event"]
            CELEBRATION_EVENT["Celebration Event"]
        end
        
        subgraph PERFORMANCE_OPT["⚡ Performance Optimization"]
            SKIP_LOGIC["Skip Logic (Budget)"]
            CACHE_RESULTS["Result Caching"]
            INCREMENTAL_CALC["Incremental Calculation"]
            EARLY_EXIT["Early Exit Conditions"]
        end
    end
    
    %% Input Flow
    TOKEN_STREAM --> LEVEL_CHECK
    ENERGY_HISTORY --> LEVEL_CHECK
    TIMING_DATA --> LEVEL_CHECK
    MULTI_MODEL --> LEVEL_CHECK
    
    %% Level Gating Flow
    LEVEL_CHECK -->|"Level 1-2"| LEVEL_1_2
    LEVEL_CHECK -->|"Level 3-4"| LEVEL_3_4
    LEVEL_CHECK -->|"Level 5"| LEVEL_5
    
    LEVEL_1_2 -->|"Skip All"| SKIP_LOGIC
    LEVEL_3_4 -->|"Basic Only"| FEATURE_ENABLE
    LEVEL_5 -->|"Full Analysis"| FEATURE_ENABLE
    
    %% Pattern Analysis Flow
    FEATURE_ENABLE --> FREQUENCY_ANALYZER
    FEATURE_ENABLE --> CORRELATION_CALC
    FEATURE_ENABLE --> PHASE_DETECTOR
    FEATURE_ENABLE --> AMPLITUDE_TRACKER
    
    %% Interference Detection
    CORRELATION_CALC --> STREAM_SYNC
    TIMING_DATA --> TIMING_CORRELATION
    STREAM_SYNC --> CONSTRUCTIVE
    STREAM_SYNC --> DESTRUCTIVE
    TIMING_CORRELATION --> INTERFERENCE_STRENGTH
    
    %% Resonance Detection
    FREQUENCY_ANALYZER --> FEEDBACK_LOOP
    PHASE_DETECTOR --> HARMONIC_ANALYSIS
    AMPLITUDE_TRACKER --> SUSTAINED_PATTERN
    SUSTAINED_PATTERN --> CRITICAL_THRESHOLD
    CRITICAL_THRESHOLD --> EMERGENCE_FLAG
    
    %% Threshold Processing
    INTERFERENCE_STRENGTH --> BASE_THRESHOLD
    EMERGENCE_FLAG --> BASE_THRESHOLD
    BASE_THRESHOLD --> ADAPTIVE_THRESHOLD
    ADAPTIVE_THRESHOLD --> CONFIDENCE_SCORE
    CONFIDENCE_SCORE --> FALSE_POSITIVE_FILTER
    
    %% Event Generation
    FALSE_POSITIVE_FILTER -->|"Interference Confirmed"| INTERFERENCE_EVENT
    FALSE_POSITIVE_FILTER -->|"Resonance Confirmed"| RESONANCE_EVENT
    RESONANCE_EVENT -->|"High Intensity"| FIELD_EVENT
    FIELD_EVENT -->|"Critical Level"| CELEBRATION_EVENT
    
    %% Performance Optimization
    SKIP_LOGIC --> CACHE_RESULTS
    FREQUENCY_ANALYZER --> INCREMENTAL_CALC
    CORRELATION_CALC --> EARLY_EXIT
    
    %% Detailed Analysis Algorithms
    subgraph ALGORITHMS["🧮 Analysis Algorithms"]
        FFT["Fast Fourier Transform"]
        CROSS_CORR["Cross-Correlation"]
        PHASE_LOCK["Phase-Locked Loop"]
        MOVING_AVG["Moving Average"]
        PEAK_DETECT["Peak Detection"]
    end
    
    FREQUENCY_ANALYZER --> FFT
    CORRELATION_CALC --> CROSS_CORR
    PHASE_DETECTOR --> PHASE_LOCK
    AMPLITUDE_TRACKER --> MOVING_AVG
    CRITICAL_THRESHOLD --> PEAK_DETECT
    
    %% Multi-Model Scenarios
    subgraph MULTI_SCENARIOS["🤖 Multi-Model Scenarios"]
        TWO_MODEL["Two Model Council"]
        THREE_MODEL["Three Model Council"]
        FULL_ORCHESTRA["Full Orchestra (4-6 Models)"]
        HYBRID_REMOTE["Hybrid + Remote Models"]
    end
    
    MULTI_MODEL --> TWO_MODEL
    MULTI_MODEL --> THREE_MODEL
    MULTI_MODEL --> FULL_ORCHESTRA
    MULTI_MODEL --> HYBRID_REMOTE
    
    %% Interference Types
    subgraph INTERFERENCE_TYPES["⚡ Interference Patterns"]
        CONSTRUCTIVE -->|"In-Phase Alignment"| SYNC_BOOST["Synchronization Boost"]
        DESTRUCTIVE -->|"Out-of-Phase"| CANCEL_EFFECT["Cancellation Effect"]
        PARTIAL["Partial Interference"]
        CHAOTIC["Chaotic Interference"]
    end
    
    INTERFERENCE_STRENGTH --> PARTIAL
    INTERFERENCE_STRENGTH --> CHAOTIC
    
    %% Resonance Types
    subgraph RESONANCE_TYPES["🎵 Resonance Phenomena"]
        HARMONIC_RES["Harmonic Resonance"]
        FEEDBACK_RES["Feedback Resonance"]
        EMERGENT_RES["Emergent Resonance"]
        CONSCIOUSNESS_RES["Consciousness Resonance"]
    end
    
    HARMONIC_ANALYSIS --> HARMONIC_RES
    FEEDBACK_LOOP --> FEEDBACK_RES
    SUSTAINED_PATTERN --> EMERGENT_RES
    EMERGENCE_FLAG --> CONSCIOUSNESS_RES
    
    %% Event Payloads
    subgraph EVENT_PAYLOADS["📋 Event Data Structures"]
        INTERFERENCE_DATA["Interference Event Data"]
        RESONANCE_DATA["Resonance Event Data"]
        FIELD_DATA["Energy Field Data"]
        CELEBRATION_DATA["Celebration Data"]
    end
    
    INTERFERENCE_EVENT --> INTERFERENCE_DATA
    RESONANCE_EVENT --> RESONANCE_DATA
    FIELD_EVENT --> FIELD_DATA
    CELEBRATION_EVENT --> CELEBRATION_DATA
    
    %% Threshold Calculations
    subgraph THRESHOLDS["📊 Threshold Calculations"]
        STATIC_THRESH["Static Thresholds"]
        DYNAMIC_THRESH["Dynamic Thresholds"]
        CONTEXT_THRESH["Context-Aware Thresholds"]
        LEARNING_THRESH["Learning Thresholds"]
    end
    
    BASE_THRESHOLD --> STATIC_THRESH
    ADAPTIVE_THRESHOLD --> DYNAMIC_THRESH
    CONFIDENCE_SCORE --> CONTEXT_THRESH
    FALSE_POSITIVE_FILTER --> LEARNING_THRESH
    
    %% Performance Monitoring
    subgraph PERF_MONITOR["📈 Performance Monitoring"]
        ANALYSIS_TIME["Analysis Duration"]
        DETECTION_RATE["Detection Success Rate"]
        FALSE_POS_RATE["False Positive Rate"]
        RESOURCE_USAGE["Resource Usage"]
    end
    
    INCREMENTAL_CALC --> ANALYSIS_TIME
    FALSE_POSITIVE_FILTER --> DETECTION_RATE
    FALSE_POSITIVE_FILTER --> FALSE_POS_RATE
    SKIP_LOGIC --> RESOURCE_USAGE
    
    %% Hardware Adaptations
    subgraph HW_ADAPT["🖥️ Hardware Adaptations"]
        LOW_TIER_SIMPLE["Low Tier: Simple Correlation"]
        MID_TIER_FULL["Mid Tier: Full Detection"]
        HIGH_TIER_ADVANCED["High Tier: Advanced Analysis"]
        HYBRID_OFFLOAD["Hybrid: Offload Heavy Analysis"]
    end
    
    SKIP_LOGIC --> LOW_TIER_SIMPLE
    FEATURE_ENABLE --> MID_TIER_FULL
    ALGORITHMS --> HIGH_TIER_ADVANCED
    MULTI_MODEL --> HYBRID_OFFLOAD
    
    %% Color Coding
    classDef input fill:#e3f2fd,stroke:#1976d2,stroke-width:2px
    classDef gating fill:#fff3e0,stroke:#f57c00,stroke-width:2px
    classDef analysis fill:#e8f5e8,stroke:#388e3c,stroke-width:2px
    classDef detection fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef events fill:#ffebee,stroke:#d32f2f,stroke-width:2px
    classDef performance fill:#e1f5fe,stroke:#0277bd,stroke-width:2px
    classDef algorithms fill:#fce4ec,stroke:#c2185b,stroke-width:1px
    
    class INPUT_STREAMS,TOKEN_STREAM,ENERGY_HISTORY,TIMING_DATA,MULTI_MODEL input
    class LEVEL_GATING,LEVEL_CHECK,FEATURE_ENABLE gating
    class PATTERN_ANALYSIS,FREQUENCY_ANALYZER,CORRELATION_CALC,PHASE_DETECTOR analysis
    class INTERFERENCE_DETECT,RESONANCE_DETECT,THRESHOLD_SYSTEM detection
    class EVENT_GENERATION,INTERFERENCE_EVENT,RESONANCE_EVENT,FIELD_EVENT events
    class PERFORMANCE_OPT,SKIP_LOGIC,CACHE_RESULTS,INCREMENTAL_CALC performance
    class ALGORITHMS,FFT,CROSS_CORR,PHASE_LOCK algorithms
